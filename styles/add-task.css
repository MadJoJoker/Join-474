/* body,
html {
  margin: 0;
  height: 100%;
  font-family: "Inter var", sans-serif;
}

.app-container {
  display: flex;
  height: 100vh;
}

.main-content {
  width: calc(100% - 232px);
  display: flex;
  flex-direction: column;
} */

.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 58px;
  overflow-y: auto;
  background-color: var(--white);
  scrollbar-width: none;

  h1 {
    font-size: 63px;
    margin-block-start: 0;
    margin-block-end: 0;
    max-width: 1572px;
  }
}

.form {
  display: flex;
  flex-direction: column;
  padding-top: 24px;
  gap: 32px;
  max-width: 1572px;
}

.form-fill-part {
  display: flex;
  justify-content: space-between;
}

.left-form {
  display: flex;
  flex-direction: column;
  padding-right: 48px;
  gap: 8px;
  padding-bottom: 48px;
  width: 100%;
}

.label-container {
  display: flex;
  flex-direction: column;
  gap: 4px;
  padding-bottom: 19px;
}

.required::after {
  content: "*";
  color: var(--peachyPink);
}

.input-inline {
  position: relative;
  display: inline-block;
}

.calendar-icon {
  position: absolute;
  right: 21px;
  top: 50%;
  transform: translateY(-50%);
  cursor: pointer;
  display: flex;
  align-items: center;
}

.calendar-img {
  width: 24px;
  height: 24px;
}

.border {
  height: 424px;
  width: 0;
  border: 1px solid var(--borderGrey);
  border-radius: 8px;
}

.right-form {
  display: flex;
  flex-direction: column;
  padding-left: 48px;
  padding-bottom: 48px;
  width: 100%;
}

.input-field {
  height: 48px;
  width: 100%;
  padding: 0 21px;
  border: 1px solid var(--borderGrey);
  border-radius: 10px;
  font-size: 20px;
  cursor: pointer;
  background-color: var(--white);
  /* line-height: 40px;
  margin-bottom: 15px; */


  &::placeholder {
    color: var(--borderGrey);
  }

  &:focus {
    border-color: var(--lightBlue);
    outline: none;
  }

  &:focus.invalid {
    border-color: var(--peachyPink);
  }
}

.textarea-wrapper {
  position: relative;
  display: inline-block;
}

.task-description-area {
  font-family: "Inter var", sans-serif;
  resize: none;
  height: 120px;
  width: 100%;
  padding: 18px 16px;
  border: 1px solid var(--borderGrey);
  border-radius: 10px;
  font-size: 20px;
  cursor: text;
  overflow: hidden;
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }

  &::placeholder {
    color: var(--borderGrey);
  }

  &:focus {
    border-color: var(--lightBlue);
    outline: none;
  }
}

.resize-handle {
  position: absolute;
  right: 4px;
  bottom: 8px;
  width: 18px;
  height: 18px;
  cursor: ns-resize;
  user-select: none;
}

.priority-btn {
  display: flex;
  align-items: center;
  background-color: var(--white);
  height: 56px;
  border: none;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.08);
  border-radius: 10px;
  font-size: 20px;
  line-height: 120%;
  gap: 8px;
  padding: 16px 10px;
  cursor: pointer;

  &:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12),
      -2px 2px 6px rgba(0, 0, 0, 0.05),
      2px 2px 6px rgba(0, 0, 0, 0.05);
  }

  &.active {
    &[data-priority="urgent"] {
      color: var(--white);
      background-color: var(--urgent);

      img {
        filter: brightness(0) invert(1);
      }
    }

    &[data-priority="medium"] {
      color: var(--white);
      background-color: var(--middle);

      img {
        filter: brightness(0) invert(1);
      }
    }

    &[data-priority="low"] {
      color: var(--white);
      background-color: var(--low);

      img {
        filter: brightness(0) invert(1);
      }
    }
  }
}

.select-wrapper {
  position: relative;
  width: 100%;
  z-index: 1000;
}

.styled-select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  height: 48px;
  width: 100%;
  border-radius: 10px;
  font-size: 20px;
  cursor: pointer;
  background-color: var(--white);

  &:hover {
    border-color: rgba(0, 0, 0, 0.3);
  }

  &.invalid {
    border-color: var(--peachyPink);
  }
}

.invalid {
  border: 1px solid var(--peachyPink);
  z-index: 1001;
}

.styled-select-addition {
  border: 1px solid var(--borderGrey);
  padding: 12px 21px 0 21px;
}

.option {
  padding-left: 21px;
  border: 1px hidden var(--borderGrey);
  border-radius: 10px;
  height: 48px;
  display: flex;
  align-items: center;

  &:hover {
    background-color: var(--borderGrey);
  }
}


.contact-option {
  padding: 7px 21px;
  border: 1px hidden var(--borderGrey);
  border-radius: 10px;
  max-height: 56px;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;

  &:hover {
    background-color: var(--borderGrey);
  }

  &.assigned {
    background-color: var(--dark);
    color: var(--white);

    &:hover {
      background-color: var(--darkHover);
    }
  }
}

.contact-input {
  height: 100%;
  width: 100%;
  padding: 0 21px;
  border: 1px solid var(--borderGrey);
  border-radius: 10px;
  font-size: 20px;

  &:hover {
    border-color: rgba(0, 0, 0, 0.3);
  }

  &:focus {
    border-color: var(--lightBlue);
    outline: none;
  }

  &::placeholder {
    color: var(--black);
  }
}

.dropdown-icon-container {
  position: absolute;
  right: 21px;
  top: 50%;
  transform: translateY(-50%);
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;

  &:hover {
    background-color: var(--borderGrey);
  }

  &.active:hover {
    background-color: rgba(0, 122, 255, 0.2);
  }
}

.dropdown-icon {
  width: 8px;
  height: 8px;
  transition: transform 0.3s ease;

  &.open {
    transform: rotate(180deg);
  }
}

.options-wrapper {
  height: 0;
  transition: height 0.3s ease;

  &.open {
    height: 96px;
    z-index: 2;

    #category-options-container {
      opacity: 1;
    }
  }

  &.open-assigned-to {
    margin-top: 15px;
    height: 148px;
    margin-bottom: 19px;

    #assigned-to-options-container {
      opacity: 1;
    }
  }
}

#category-options-container {
  font-size: 20px;
  opacity: 0;
  transition: opacity 0.3s ease;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  background-color: var(--white);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.08);
  border-radius: 0 0 10px 10px;
  width: 100%;
  height: 116px;
}

/* #category-options-container.open{
    margin-top: 15px;
} */

#assigned-to-options-container {
  margin-top: -17px;
  font-size: 20px;
  opacity: 0;
  transition: opacity 0.3s ease;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  background-color: var(--white);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.08);
  border-radius: 0 0 10px 10px;
  width: 100%;
  max-height: 168px;
  overflow: auto;

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--dark);
    border-radius: 4px;
  }
}

.spacer {
  margin-top: -34px;
  height: 30px;
  width: 100%;
  background-color: var(--lightGrey);
}

.initials-container {
  /* Container-Layout */
  display: flex;
  flex-shrink: 0;
  /* Verhindert, dass der Container schrumpft */
  align-items: center;
  justify-content: flex-start;
  white-space: nowrap;
  /* Wichtig: Icons bleiben in einer Zeile */

  /* Dimensionen und Rand */
  height: 42px;

  /* Scrollbarkeits-Einstellungen */
  overflow-x: auto;
  /* Horizontal scrollbar, wenn Inhalt überläuft */
  overflow-y: hidden;
  /* Vertikales Scrollen verhindern */

  /* Scrollbalken unsichtbar machen */
  scrollbar-width: none;
  /* Für Firefox */
  -ms-overflow-style: none;
  /* Für Internet Explorer / ältere Edge-Versionen */

  /* Pseudo-Element für Webkit-Browser (Chrome, Safari, aktuelle Edge) */
  &::-webkit-scrollbar {
    display: none;
    width: 0;
    height: 0;
  }

  /* Styling der einzelnen Initialen-Kreise innerhalb des Containers */
  .assigned-initials-circle {
    flex-shrink: 0;
    /* Verhindert, dass die Kreise schrumpfen */
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    /* Padding und Border werden in Width/Height einberechnet */

    /* Dimensionen und Styling der Kreise */
    width: 35px;
    height: 35px;
    color: var(--white);
    border: 2px solid var(--white);
    border-radius: 50%;
    /* Macht die Kreise rund */

    /* Abstand zwischen den Kreisen */
    margin-right: 8px;

    /* Besonderheit für das letzte Element, um unnötigen Abstand zu entfernen */
    &:last-child {
      margin-right: 0;
    }
  }
}

.add-on {
  display: flex;
  align-items: center;
  margin-top: -12px;
  padding-bottom: 19px;
  max-width: 128px;
  width: 100%;
  overflow-x: auto;
  cursor: pointer;
  z-index: 2;

  &::-webkit-scrollbar {
    height: 6px;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--dark);
    border-radius: 4px;
  }
}

.checkbox-icon {
  content: url("../assets/icons/btn/checkbox-empty-black.svg");

  &.checked {
    content: url("../assets/icons/btn/checkbox-filled-white.svg");

    &.fitered {
      filter: brightness(1) invert(1);
    }
  }
}

.hidden-input {
  position: absolute;
  top: 44px;
  left: 110px;
  opacity: 0;
  width: 1px;
  height: 1px;
  pointer-events: none;
}

.input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.input-field-subtask {
  height: 48px;
  padding: 0 48px 0 21px;
  border: 1px solid var(--borderGrey);
  border-radius: 10px;
  font-size: 20px;
  width: 100%;

  &::placeholder {
    color: var(--borderGrey);
  }

  &:focus {
    border-color: var(--lightBlue);
    outline: none;
  }
}

:root {
  /* Annahme: Du hast diese Variablen definiert. Passe die Werte ggf. an. */
  --white: #ffffff;
  --borderGrey: #e0e0e0;
}

.input-button {
  /* Positionierung */
  position: absolute;
  right: 26px;
  top: 50%;
  transform: translateY(-50%);

  /* Dimensionen und Form */
  width: 24px;
  height: 24px;
  border-radius: 50%;
  border: hidden;

  background-color: var(--white);
  cursor: pointer;

  /* Flexbox für Inhalt (z.B. ein Icon/SVG/Img) */
  display: flex;
  align-items: center;
  justify-content: center;

  /* Hover-Zustand */
  &:hover {
    background-color: var(--borderGrey);
  }

  /* Styling für Bilder (img-Tags) innerhalb des Buttons */
  img {
    width: 14px;
    height: 14px;
    border-radius: 10px;
    /* Macht die Ecken des Bildes leicht abgerundet */
  }
}

.middle {
  position: absolute;
  right: 48px;
  top: 50%;
  transform: translateY(-50%);
  width: 0;
  height: 24px;
  border: 1px solid var(--lightGrey);
}

/* Anpassung an der ul.subtask-list */
.subtask-list {
  /* Grundlegende Container-Styles */
  position: relative;
  width: 100%;
  height: 35px;
  border-radius: 10px;
  margin-top: 25px;
  font-size: 16px;
  display: flex;
  align-items: center;
  padding-right: 20px;
  /* Platz für die Icons am rechten Rand */
  padding-left: 0;
  /* Standard-Padding von UL entfernen */
  list-style-type: none;
  /* Listenpunkte der UL entfernen */

  /* Hover-Zustand für den Container selbst */
  &:hover {
    background-color: var(--borderGrey);
    color: var(--black);
  }

  /* Runder Punkt vor dem Listenelement (Kreise vor den Punkten) */
  &::before {
    content: "";
    /* Wichtig für Pseudoelemente */
    display: inline-block;
    width: 8px;
    /* Größe des Kreises */
    height: 8px;
    /* Größe des Kreises */
    border-radius: 50%;
    /* Macht den Kreis rund */
    background-color: var(--black);
    /* Farbe des Kreises */
    margin-left: 16px;
    /* Abstand zum linken Rand des Containers */
    margin-right: 8px;
    /* Abstand zum Text */
    flex-shrink: 0;
    /* Verhindert, dass der Kreis schrumpft */
  }

  /* Innerer Container für Text und Aktionen, um sie nebeneinander zu halten */
  .subtask-item-content {
    display: flex;
    /* Macht diesen Container flexibel */
    align-items: center;
    width: 100%;
    /* Füllt den verfügbaren Platz aus */
    justify-content: space-between;
    /* Text links, Aktionen rechts */
  }

  /* Styling für den Text der Subtask */
  .subtask-text {
    color: var(--black);
    flex-grow: 1;
    /* Der Text soll so viel Platz wie möglich einnehmen */
    overflow: hidden;
    /* Verhindert Textüberlauf */
    white-space: nowrap;
    text-overflow: ellipsis;
    /* Zeigt "..." bei Überlauf */
  }

  .subtask-actions {
    display: flex;
    align-items: center;
    gap: 8px;
    flex-shrink: 0;
    padding-left: 8px;
  }

  /* Styling für den Separator zwischen den SVGs */
  .separator {
    width: 1px;
    height: 20px;
    /* Höhe des Separators */
    background-color: var(--separatorGrey);
    /* Farbe des Separators */
    flex-shrink: 0;
    /* Verhindert, dass der Separator schrumpft */
  }

  /* Allgemeine SVG-Styles innerhalb von .subtask-list */
  svg {
    color: var(--lightGrey);
    cursor: pointer;
    transition: color 0.1s ease;
    flex-shrink: 0;
    /* Verhindert, dass die SVGs schrumpfen */

    /* Hover-Zustand für SVGs, wenn der Container .subtask-list gehovert wird */
    .subtask-list:hover & {
      color: var(--black);
    }

    /* .left und .right Klassen auf SVGs sind jetzt überflüssig für die Positionierung,
       da `gap` im `.subtask-actions` und die Reihenfolge im HTML das übernehmen.
       Sie können aber für andere, icon-spezifische Stile beibehalten werden, falls gewünscht. */
  }
}

.subtask-action-btn {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  border: hidden;
  margin: 0px 5px 0px 5px;
  background-color: var(--white);
  cursor: pointer;

  &:hover {
    background-color: var(--borderGrey);
  }
}

/* Styles für den Edit-Input-Bereich, der mit .subtask-list interagieren könnte */
.edit-input {
  flex-grow: 1;
  position: relative;
  height: 32px;
  width: 100%;
  /* Passt sich der Breite des übergeordneten Flex-Items an */
  border: none;
  border-bottom: 1px solid var(--lightBlue);
  font-size: 16px;
  padding-left: 21px;
  /* Für Text-Einrückung */
  box-sizing: border-box;
  /* Sicherstellen, dass Padding/Border die Breite nicht sprengen */

  &:focus-visible {
    border: none;
    border-bottom: 1px solid var(--lightBlue);
    outline: none;
  }
}

.subtask-edit-container {
  display: flex;
  align-items: center;
  width: 100%;
  /* Stellt sicher, dass der Container die volle Breite nutzt */
}

/* Container für Icons im Bearbeitungsmodus */
.subtask-icons-container {
  /* Diese Positionierung ist OK, wenn dieser Container über dem Input schwebt */
  position: absolute;
  right: 26px;
  top: 50%;
  transform: translateY(-50%);
  /* Vertikale Zentrierung */
  display: flex;
  align-items: center;
  pointer-events: none;
  /* Icons sind nicht klickbar, wenn Container ausgeblendet ist */
  opacity: 0;
  transition: opacity 0.3s ease;
  /* Sanftes Ein-/Ausblenden */

  svg {
    cursor: pointer;
    pointer-events: auto;
    /* Icons im Container sind klickbar */
    user-select: none;
    margin-left: 10px;
    /* Abstand zwischen den Icons im Edit-Modus */
    /* Weitere Styles für Icons im Edit-Modus */
  }
}

#subtask-icons:hover {
  background-color: var(--white);
}

.subtask-separator {
  position: absolute;
  right: 13px;
  top: 50%;
  transform: translateY(-50%);
  width: 1px;
  height: 1.2em;
  background-color: var(--borderGrey);
  vertical-align: middle;
}

.form-buttons-part {
  position: absolute;
  bottom: 58px;
  left: 290px;
  right: 58px;
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  max-width: 1572px;
}

.selected-option {
  background-color: var(--white);
}

.sign-info {
  font-size: 16px;
  line-height: 120%;

  &::before {
    content: "*";
    color: var(--peachyPink);
  }
}

.buttons-area {
  display: flex;
  align-items: center;
  gap: 16px;
}